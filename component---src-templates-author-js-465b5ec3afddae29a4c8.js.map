{"version":3,"sources":["webpack:///./src/templates/author.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-column.js"],"names":["Author","pageContext","data","location","siteTitle","site","siteMetadata","title","author","allMarkdownRemark","edges","authorHeader","totalCount","style","listStyle","map","node","to","Layout","header","children","isRootPath","pathname","className","data-is-root-path","PostColumnTemplate","key","fields","slug","itemScope","itemType","itemProp","frontmatter","created","tag","dangerouslySetInnerHTML","__html","description","excerpt","name","filename","borderRadius","fixed"],"mappings":"8FAAA,oEAqDeA,UA5CA,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC7BC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAWP,EAAXO,OAF0C,EAGpBN,EAAKO,kBAA3BC,EAH0C,EAG1CA,MAIFC,EAAY,UAAaH,EAAb,MAPgC,EAGnCI,WAIG,IAClB,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUI,MAAOH,GACjC,4BAAKO,GACL,wBAAIE,MAAO,CAAEC,UAAU,SACpBJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OAAO,kBAAC,IAAD,CAAYA,KAAMA,QAG7B,kBAAC,IAAD,CAAMC,GAAG,YAAT,kB,kCCzBN,qCA+BeC,IA5BA,SAAC,GAAmC,IAG7CC,EAHYhB,EAAgC,EAAhCA,SAAUI,EAAsB,EAAtBA,MAAOa,EAAe,EAAfA,SAE3BC,EADQ,MACKlB,EAASmB,SAiB5B,OAbEH,EADEE,EAEA,wBAAIE,UAAU,gBACZ,kBAAC,IAAD,CAAMN,GAAG,KAAKV,IAKhB,kBAAC,IAAD,CAAMgB,UAAU,mBAAmBN,GAAG,KACnCV,GAML,yBAAKgB,UAAU,iBAAiBC,oBAAmBH,GACjD,4BAAQE,UAAU,iBAAiBJ,GACnC,8BAAOC,GACP,4CAAkBb,M,kCC1BxB,iDA+DekB,IA3DY,SAAC,GAAc,IAAD,IAAXT,EAAW,EAAXA,KAE5B,OACE,wBAAIO,UAAU,YAAYG,IAAKV,EAAKW,OAAOC,MACzC,6BACEL,UAAU,iBACVM,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,IAAD,CAAMb,GAAID,EAAKW,OAAOC,KAAMG,SAAS,OACnC,0BAAMA,SAAS,YAAYf,EAAKgB,YAAYzB,SAGhD,+BAAQS,EAAKgB,YAAYC,SACzB,yBAAKV,UAAU,YAAf,UACGP,EAAKgB,YAAYE,WADpB,aACG,EAAsBnB,KAAI,SAAAmB,GACzB,OACE,+BACE,yBAAKX,UAAU,OACb,kBAAC,IAAD,CAAMN,GAAE,SAAWiB,EAAX,KAAoBA,UAOxC,iCACE,uBACEC,wBAAyB,CACvBC,OAAQpB,EAAKgB,YAAYK,aAAerB,EAAKsB,SAE/CP,SAAS,iBA7Bf,UAgCOf,EAAKgB,YAAYxB,cAhCxB,aAgCO,EAAyBO,KAAI,SAAAwB,GAC5B,OACE,2BAAOhB,UAAU,gBACf,gCACE,kBAAC,IAAD,CACEiB,SAAU,eAAiBD,EAAO,OAClC1B,MAAO,CACL4B,aAAa,OAEfC,OAAO,KAGX,6BACGH,QAMf","file":"component---src-templates-author-js-465b5ec3afddae29a4c8.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport PostColumn from \"../components/post-column\"\n\nconst Author = ({ pageContext, data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { author } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  // const authorHeader = `${totalCount} post${\n  //   totalCount === 1 ? \"\" : \"s\"\n  // } authorged with \"${author}\"`\n  const authorHeader = `author ${author} : ${totalCount}ä»¶`\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h2>{authorHeader}</h2>\n      <ol style={{ listStyle: `none` }}>\n        {edges.map(({ node }) => {\n          return <PostColumn node={node} />\n        })}\n      </ol>\n      <Link to=\"/authors\">All authors</Link>\n    </Layout>\n  )\n}\n\nAuthor.propTypes = {\n  pageContext: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Author\n\nexport const pageQuery = graphql`\n  query($author: String) {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          summary\n          social {\n            github\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___created], order: DESC }\n      filter: { frontmatter: { author: { in: [$author] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            created(formatString: \"Y-M-D ddd\")\n            tag\n            author\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>(c) 2021 {title}</footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"./image\"\n\nconst PostColumnTemplate = ({ node }) => {\n  //   const { node } = data.allMarkdownRemark.edges\n  return (\n    <li className=\"post-list\" key={node.fields.slug}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h2>\n            <Link to={node.fields.slug} itemProp=\"url\">\n              <span itemProp=\"headline\">{node.frontmatter.title}</span>\n            </Link>\n          </h2>\n          <small>{node.frontmatter.created}</small>\n          <div className=\"tag-list\">\n            {node.frontmatter.tag?.map(tag => {\n              return (\n                <small>\n                  <div className=\"tag\">\n                    <Link to={`/tags/${tag}/`}>{tag}</Link>\n                  </div>\n                </small>\n              )\n            })}\n          </div>\n        </header>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: node.frontmatter.description || node.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n            {node.frontmatter.author?.map(name => {\n              return(\n                <small className=\"profile-mini\">\n                  <figure>\n                    <Image\n                      filename={\"profile-pic-\" + name + \".jpg\"}\n                      style={{\n                        borderRadius: `50%`,\n                      }}\n                      fixed={true}\n                    />\n                  </figure>\n                  <div>\n                    {name}\n                  </div>\n                </small>\n              )\n            })}\n      </article>\n      <hr />\n    </li>\n  )\n}\nexport default PostColumnTemplate\n"],"sourceRoot":""}